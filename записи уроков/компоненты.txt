https://v3.ru.vuejs.org/ru/guide/introduction.html#%D0%BA%D0%BE%D0%BC%D0%BF%D0%BE%D0%B7%D0%B8%D1%86%D0%B8%D1%8F-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B8%D0%B7-%D0%BA%D0%BE%D0%BC%D0%BF%D0%BE%D0%BD%D0%B5%D0%BD%D1%82%D0%BE%D0%B2

Компонент во Vue — по сути экземпляр с предустановленными опциями. Его регистрация также проста: нужно создать объект компонента, как это уже делали с объектом app, и указать его в родительской опции components:

const TodoItem = {
  template: `<li>Это одна из задач</li>`
}

// Создаём Vue-приложение
const app = Vue.createApp({
  components: {
    TodoItem // Регистрируем новый компонент
  },
  ... // Остальные свойства для компонента
})

// Монтируем приложение Vue
app.mount(...)

Компоненты Vue должны быть явно зарегистрированы в родительском компоненте, 
чтобы их можно было использовать в шаблоне. Это делается в разделе components 
определения родительского компонента.
 components: {
    MyComponent // Используем компонент MyComponent
  }
Теперь, когда MyComponent зарегистрирован в родительском компоненте, 
вы можете использовать его в шаблоне родительского компонента, просто вставив его тег
<template>
  <div>
    <MyComponent/> Здесь <MyComponent/> является тегом компонента, который будет отображен вместе с другим содержимым родительского компонента.
  </div>
</template>
============================================
<User v-for="(el, index) in users" :key="index" :user="el"/>

Атрибут user в данном случае является пропсом (свойством) компонента <User>. нужно передовать данные в компонент и получать данные из него 
 props: {
            user:{
                type: Object,
                required: true
            },
            index:{
                type: Number,
                required: true
            },
            deletUser:{
                type: Function,
                required: true
            }
        }
